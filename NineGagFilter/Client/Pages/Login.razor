@page "/Login"
@layout MainLayout

@using Authentication
@inject ILogger<Login> Logger
@inject NineGagAuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<Row>
    <Column>
        <Card>
            <CardHeader>
                <CardTitle>Login</CardTitle>
            </CardHeader>
            <CardBody>
                <p>
                    It seems that you're not logged in yet, please login to continue. Facebook and google authentication will be added in the future.
                </p>
                <Field>
                    <FieldLabel>Username</FieldLabel>
                    <TextEdit Placeholder="Username..." @bind-Text="@username" />
                </Field>
                <Field>
                    <FieldLabel>Password</FieldLabel>
                    <TextEdit Role="TextRole.Password" @bind-Text="@password" />
                </Field>
                <Button Color="Color.Primary" Clicked="@LoginAsync">Login</Button>
                <Snackbar @ref="loginFailedSnackBar">
                    <SnackbarBody>
                        Login failed
                    </SnackbarBody>
                </Snackbar>
            </CardBody>
        </Card>
    </Column>
</Row>

@code {
    [CascadingParameter]
    protected Task<AuthenticationState> AuthenticationStateTask { get; set; }

    private Snackbar loginFailedSnackBar;
    string username;
    string password;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var auth = await AuthenticationStateTask;
        
        if (auth?.User?.Identity != null && auth.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("/");
        }
    }

    async Task LoginAsync()
    {
        loginFailedSnackBar.Hide();

        try
        {
            await this.AuthenticationStateProvider.LoginAsync(username, password);
            password = string.Empty;
        }
        catch (Exception e)
        {
            Logger.LogWarning(e.ToString());
            loginFailedSnackBar.Show();
            return;
        }

        NavigationManager.NavigateTo("/");
    }
}
